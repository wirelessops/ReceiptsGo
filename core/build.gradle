apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk = libs.versions.compileSdk.get().toInteger()


    defaultConfig {
        minSdkVersion libs.versions.minSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_11
        sourceCompatibility JavaVersion.VERSION_11
    }
    kotlin {
        jvmToolchain(11)
    }

    /**
     * Note: core module doesn't have flavor-dependent code but it needs flavors because of transitive analytics module
     */
    flavorDimensions "isFloss"
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }


    productFlavors {
        floss {
            dimension "isFloss"
        }

        notFloss {
            dimension "isFloss"
        }
    }
    namespace 'com.wops.core'

}

dependencies {

    api project(':analytics')

    // Dagger
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"

    //Rx2
    api "io.reactivex.rxjava2:rxjava:$RX2_JAVA_VERSION"
    api "io.reactivex.rxjava2:rxandroid:$RX2_ANDROID_VERSION"

    // Unit Tests
    testImplementation "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$MOCKITO_KOTLIN_VERSION"
    testImplementation "androidx.test:core:$ANDROID_TEST_RUNNER_VERSION"

    implementation "com.google.http-client:google-http-client-gson:$GOOGLE_HTTP_CLIENT_VERSION"
}
